"use strict";(self.webpackChunksolide_docs=self.webpackChunksolide_docs||[]).push([[9532],{8937:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=n(4848),o=n(8453);const r={sidebar_position:1},s="Swayide",a={id:"ide/sway-ide",title:"Swayide",description:"SwayIDE is a specialized Integrated Development Environment designed for developing Sway smart contracts on the Fuel blockchain. It provides a user-friendly interface that facilitates writing, compiling, and deploying Sway contracts with ease. Featuring integrated support for project management and deployment, SwayIDE streamlines the development workflow, offering tools for real-time code analysis, error checking, and network configuration. With built-in support for various Fuel networks, including devnet, testnet, and mainnet, SwayIDE enhances the efficiency of smart contract development and deployment processes, making it a valuable tool for developers working within the Fuel ecosystem.",source:"@site/docs/ide/sway-ide.md",sourceDirName:"ide",slug:"/ide/sway-ide",permalink:"/docs/ide/sway-ide",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udfe1 Movide",permalink:"/docs/ide/move-ide"},next:{title:"\ud83d\udd35 Stylide",permalink:"/docs/ide/stylus-ide"}},l={},c=[{value:"Resource",id:"resource",level:2},{value:"Compile and Deploy",id:"compile-and-deploy",level:3},{value:"Utility",id:"utility",level:3}];function d(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"swayide",children:"Swayide"}),"\n",(0,i.jsxs)(t.p,{children:["SwayIDE is a specialized Integrated Development Environment designed for developing ",(0,i.jsx)(t.strong,{children:"Sway"})," smart contracts on the ",(0,i.jsx)(t.strong,{children:"Fuel"})," blockchain. It provides a user-friendly interface that facilitates writing, compiling, and deploying Sway contracts with ease. Featuring integrated support for project management and deployment, SwayIDE streamlines the development workflow, offering tools for real-time code analysis, error checking, and network configuration. With built-in support for various Fuel networks, including devnet, testnet, and mainnet, SwayIDE enhances the efficiency of smart contract development and deployment processes, making it a valuable tool for developers working within the Fuel ecosystem."]}),"\n",(0,i.jsx)(t.h2,{id:"resource",children:"Resource"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/solide-project/swayide",children:"Source Code"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://sway.solide0x.tech/",children:"Sway IDE"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"compile-and-deploy",children:"Compile and Deploy"}),"\n",(0,i.jsxs)(t.p,{children:["In SwayIDE, compiling and deploying ",(0,i.jsx)(t.strong,{children:"Sway"})," smart contracts is straightforward and efficient. After loading your Sway project into the IDE, you can compile your contract with a single click. The compilation process is optimized for rapid feedback, ensuring quick turnaround times for development iterations. Once your contract is successfully compiled, SwayIDE facilitates deployment to any ",(0,i.jsx)(t.strong,{children:"Fuel"})," network, including devnet, testnet, or mainnet. Integration with compatible wallets allows for seamless contract deployment and interaction. Additionally, SwayIDE supports configuration of project-specific settings, such as custom paths for the ",(0,i.jsx)(t.strong,{children:"Forc.toml"})," file, to tailor the development environment to your needs. This streamlined process helps developers manage and deploy smart contracts efficiently within the Fuel ecosystem."]}),"\n",(0,i.jsx)("img",{className:"rounded-lg w-full",src:"/img/docs/swayide-wallet.png",alt:"cover"}),"\n",(0,i.jsx)(t.p,{children:"For testing purposes, you can also interact with your contract by performing a dry run on Fuel by toggling the switch in the IDE, allowing you to simulate contract execution without affecting the live network."}),"\n",(0,i.jsx)("img",{className:"rounded-lg w-full",src:"/img/docs/swayide-interact.png",alt:"cover"}),"\n",(0,i.jsx)(t.h3,{id:"utility",children:"Utility"}),"\n",(0,i.jsx)(t.p,{children:"Coming Soon"})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);